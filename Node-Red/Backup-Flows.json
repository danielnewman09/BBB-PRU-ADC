[
    {
        "id": "bb257ac8.0f526",
        "type": "tab",
        "label": "Vibration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "400cc936.066418",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "ab33b2af.6a17e",
        "type": "tab",
        "label": "RMS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7620dcc5.2c3d6c",
        "type": "tab",
        "label": "Vibration - Remote",
        "disabled": false,
        "info": ""
    },
    {
        "id": "759a288b.f02f9",
        "type": "tab",
        "label": "Remote Inference",
        "disabled": true,
        "info": ""
    },
    {
        "id": "85c76f72.05f7a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7091716.3bddc1",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aceeeecc.89612",
        "type": "subflow",
        "name": "Parse Sensor Data",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 140,
                "wires": [
                    {
                        "id": "5c2d8662.8366c8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 360,
                "wires": [
                    {
                        "id": "f66e4866.e06108",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "dfe48ce5.84226",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "6dcaa99d.a86688"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 180,
                "wires": [
                    {
                        "id": "e519e164.500cc",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "eccbbcf4.fe2b5",
        "type": "subflow",
        "name": "Parse by Sensor ID",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 177,
                "y": 522,
                "wires": [
                    {
                        "id": "60d3ff2c.8f97d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 520,
                "wires": [
                    {
                        "id": "1ba33aef.107e05",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "664ea1ce.8cf288",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "35181bbd.be726c",
        "type": "ui_group",
        "z": "",
        "name": "Vibration",
        "tab": "664ea1ce.8cf288",
        "disp": true,
        "width": "15",
        "collapse": true
    },
    {
        "id": "9d72b63f.20297",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "66af4d55.e496dc",
        "type": "ui_group",
        "z": "",
        "name": "Chart with integer X axis",
        "tab": "b137f3fa.74286",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "b137f3fa.74286",
        "type": "ui_tab",
        "z": "",
        "name": "Chart.js example",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "7336c11d.55fa1",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyO1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "10000"
    },
    {
        "id": "16f9391.41f87c7",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyS4",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": ""
    },
    {
        "id": "418195f5.ec322c",
        "type": "ui_group",
        "z": "",
        "name": "Current",
        "tab": "a8cfb9d0.9a6fe8",
        "order": 2,
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "a8cfb9d0.9a6fe8",
        "type": "ui_tab",
        "z": "",
        "name": "Current",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "364383be.e5729c",
        "type": "ui_tab",
        "z": "",
        "name": "Temperature",
        "icon": "dashboard"
    },
    {
        "id": "ebd1c8ea.cfa9c8",
        "type": "ui_group",
        "z": "",
        "name": "Temperature",
        "tab": "364383be.e5729c",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "4c693b3.a4a58c4",
        "type": "ui_tab",
        "z": "",
        "name": "Heartbeat",
        "icon": "dashboard"
    },
    {
        "id": "68f41d4.2a4abe4",
        "type": "ui_group",
        "z": "",
        "name": "Heartbeat",
        "tab": "4c693b3.a4a58c4",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "ad5eb15e.81658",
        "type": "ui_tab",
        "z": "",
        "name": "Vibration",
        "icon": "dashboard"
    },
    {
        "id": "47a06fd9.9bf4b",
        "type": "ui_group",
        "z": "",
        "name": "Vibration",
        "tab": "ad5eb15e.81658",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "ab1df484.1ba0d8",
        "type": "mqtt-broker",
        "z": "",
        "name": "mb11.iotfm.org",
        "broker": "mb11.iotfm.org",
        "port": "1883",
        "clientid": "ANT1092",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "fc1d0698.d4c4f8",
        "type": "nodebot",
        "z": "",
        "name": "",
        "username": "",
        "password": "",
        "boardType": "beaglebone-io",
        "serialportName": "",
        "connectionType": "local",
        "mqttServer": "",
        "pubTopic": "",
        "subTopic": "",
        "tcpHost": "",
        "tcpPort": "",
        "sparkId": "",
        "sparkToken": "",
        "beanId": "",
        "impId": "",
        "uuid": "",
        "token": "",
        "sendUuid": ""
    },
    {
        "id": "160dc687.b11689",
        "type": "mqtt-broker",
        "z": "",
        "name": "mb14.iotfm.org",
        "broker": "mb14.iotfm.org",
        "port": "1883",
        "clientid": "mb14daniel",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e49caa1d.33a168",
        "type": "mqtt-broker",
        "z": "",
        "name": "mb18.iotfm.org",
        "broker": "mb18.iotfm.org",
        "port": "1883",
        "clientid": "mb14daniel",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "78e9f715.78dbf8",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyO1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "10000"
    },
    {
        "id": "1abc0296.39d1cd",
        "type": "nodebot",
        "z": "",
        "name": "",
        "username": "",
        "password": "",
        "boardType": "beaglebone-io",
        "serialportName": "",
        "connectionType": "local",
        "mqttServer": "",
        "pubTopic": "",
        "subTopic": "",
        "tcpHost": "",
        "tcpPort": "",
        "sparkId": "",
        "sparkToken": "",
        "beanId": "",
        "impId": "",
        "uuid": "",
        "token": "",
        "sendUuid": ""
    },
    {
        "id": "45aef8f0.954168",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "1fe24c82.c15073",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "45aef8f0.954168",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6fa6a26c.64cf9c",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyO1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "10000"
    },
    {
        "id": "6a481434.af3dac",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyS4",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": ""
    },
    {
        "id": "bee2e376.59cca",
        "type": "ui_group",
        "z": "",
        "name": "Current",
        "tab": "f088da48.540608",
        "order": 2,
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "f088da48.540608",
        "type": "ui_tab",
        "z": "",
        "name": "Current",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "45201817.4eec28",
        "type": "ui_tab",
        "z": "",
        "name": "Temperature",
        "icon": "dashboard"
    },
    {
        "id": "ab19fc3d.b7af4",
        "type": "ui_group",
        "z": "",
        "name": "Temperature",
        "tab": "45201817.4eec28",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "5f9c0963.eb98e8",
        "type": "ui_tab",
        "z": "",
        "name": "Heartbeat",
        "icon": "dashboard"
    },
    {
        "id": "ea18f23d.50e17",
        "type": "ui_group",
        "z": "",
        "name": "Heartbeat",
        "tab": "5f9c0963.eb98e8",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "35a07101.1400ce",
        "type": "ui_tab",
        "z": "",
        "name": "Vibration",
        "icon": "dashboard"
    },
    {
        "id": "fc427447.f8eed8",
        "type": "ui_group",
        "z": "",
        "name": "Vibration",
        "tab": "35a07101.1400ce",
        "disp": false,
        "width": "21",
        "collapse": false
    },
    {
        "id": "7c71056b.aa58bc",
        "type": "mqtt-broker",
        "z": null,
        "name": "mb11.iotfm.org",
        "broker": "mb11.iotfm.org",
        "port": "1883",
        "clientid": "ANT1092",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2dde675c.acce78",
        "type": "mqtt-broker",
        "z": "",
        "name": "DNewman Research",
        "broker": "69.222.133.95",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ce6cc531.674378",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "/home/debian/Certs/590211c6df-certificate.pem.crt",
        "key": "/home/debian/Certs/590211c6df-private.pem.key",
        "ca": "/home/debian/Certs/AmazonRootCA1.pem",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "67626bc8.e176f4",
        "type": "mqtt-broker",
        "z": "",
        "name": "MB28",
        "broker": "mb28.iotfm.org",
        "port": "8883",
        "tls": "ce6cc531.674378",
        "clientid": "mb28test1",
        "usetls": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d309aa5b.5f20e",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "69.222.133.95",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2d554089.32684",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "mqtt.eclipse.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2e80ff05.89b498",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "mqtt.eclipse.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "9e4f0fa0.223bd",
        "type": "range",
        "z": "aceeeecc.89612",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "8 Bit Digital to 5 Volt Analog Conversion",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "9aac3277.dc436"
            ]
        ]
    },
    {
        "id": "3cfa491f.99f616",
        "type": "split",
        "z": "aceeeecc.89612",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "ae1c4a09.118628"
            ]
        ]
    },
    {
        "id": "ee7d5699.a20538",
        "type": "function",
        "z": "aceeeecc.89612",
        "name": "Create Array from Payload",
        "func": "var data = msg.payload.toString();\n\ndata = data.split(\",\");\n\nmsg.payload = data.map(Number);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 220,
        "wires": [
            [
                "3cfa491f.99f616"
            ]
        ]
    },
    {
        "id": "9aac3277.dc436",
        "type": "join",
        "z": "aceeeecc.89612",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 360,
        "wires": [
            [
                "f66e4866.e06108"
            ]
        ]
    },
    {
        "id": "f66e4866.e06108",
        "type": "function",
        "z": "aceeeecc.89612",
        "name": "Set Flow Variabl;",
        "func": "var value;\n\nvar partId;\nvar units;\n\nvar data = msg.payload;\n\nvar allMessages = [];\n\nvar dataItemId;\nvar assetId = global.get(\"assetId\");\nvar samplingRate;\n\nvar accelLength = global.get(\"accelLength\");\n\nvar maxIter;\n\nif(msg.dataId == \"Accelerometer\"){\n    // maxIter = 1;\n    maxIter = Math.floor(accelLength/data.length);\n    samplingRate = global.get(\"accelerometerSamplingRate\");\n    partId = global.get(\"accelerometerPartId\");\n    units = global.get(\"accelerometerUnits\");\n}\nelse{\n    maxIter = 1;\n    samplingRate = global.get(\"currentSamplingRate\");\n    partId = global.get(\"currentPartId\");\n    units = global.get(\"currentUnits\");\n    \n}\n\nfor (var i = 0; i < maxIter; i++){\n\n  value = data.slice(i, (i + 1) * accelLength);  \n  for(var j=0; j<value.length; j++){\n      value[j] = value[j].toFixed(3);\n      if(value[j] > 5.00){\n          value.splice(j,1);\n      }\n  }\n\n\n    dataItemId = msg.dataId;\n    topic = \"Asset/\" + global.get(\"assetId\") + \"/\" + dataItemId;\n    \n\n    // var jsonPayload = \"{\\\"assetId\\\":\\\"\" + assetId + \"\\\",\\\"dateTime\\\":\\\"\" + msg.dateTime + \"\\\",\\\"dataItemId\\\":\\\"\" + dataItemId + \"\\\",\\\"value\\\":\\\"\" + value + \"\\\"}\";\n    var jsonPayload = \"{\\\"assetId\\\":\\\"\" + assetId + \"\\\",\\\"dateTime\\\":\\\"\" + msg.dateTime + \"\\\",\\\"dataItemId\\\":\\\"\" + dataItemId + \"\\\",\\\"value\\\":\\\"\" + value + \"\\\",\\\"samplingRate\\\":\\\"\" + samplingRate + \"\\\",\\\"Units\\\":\\\"\" + units + \"\\\",\\\"messagePart\\\":\\\"\" + (i + 1) + \" of \" + maxIter + \"\\\",\\\"partId\\\":\\\"\" + partId + \"\\\"}\";\n    \n    node.log(jsonPayload);\n    \n    // var newMessage = {topic: \"test\"};\n    var newMessage = { topic: topic, payload: jsonPayload };\n    \n    allMessages.push(newMessage);\n}\n\nmsg = [allMessages];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5c2d8662.8366c8",
        "type": "change",
        "z": "aceeeecc.89612",
        "name": "Replace unwanted characters",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\\n",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "|",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": " ",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",\\n",
                "fromt": "str",
                "to": "\\n",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "END",
                "fromt": "str",
                "to": "65537",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "ee7d5699.a20538"
            ]
        ]
    },
    {
        "id": "ae1c4a09.118628",
        "type": "switch",
        "z": "aceeeecc.89612",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "65537",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "32ccb182.c73cfe"
            ],
            [
                "9e4f0fa0.223bd"
            ]
        ]
    },
    {
        "id": "32ccb182.c73cfe",
        "type": "change",
        "z": "aceeeecc.89612",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "9e4f0fa0.223bd"
            ]
        ]
    },
    {
        "id": "a652182a.6871c8",
        "type": "change",
        "z": "eccbbcf4.fe2b5",
        "name": "Assign Accelerometer Data Tag",
        "rules": [
            {
                "t": "set",
                "p": "dataId",
                "pt": "msg",
                "to": "Vibration",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Accelerometer-2",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "partId",
                "pt": "msg",
                "to": "Accelerometer-Pump",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "1ba33aef.107e05"
            ]
        ]
    },
    {
        "id": "6e75ac9c.0e1b44",
        "type": "join",
        "z": "eccbbcf4.fe2b5",
        "name": "Accelerometer-2",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\nAccelerometer-2",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 589,
        "y": 496,
        "wires": [
            [
                "a652182a.6871c8"
            ]
        ]
    },
    {
        "id": "6dcaa99d.a86688",
        "type": "change",
        "z": "dfe48ce5.84226",
        "name": "Replace unwanted characters",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",END",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\\n",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": " ",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "e519e164.500cc"
            ]
        ]
    },
    {
        "id": "e519e164.500cc",
        "type": "function",
        "z": "dfe48ce5.84226",
        "name": "Set Flow Variable",
        "func": "var data = msg.payload;\ndata = data.split(\",\").map(Number);\ndata = data.toString();\n\nvar partId;\nvar units;\n\nvar allMessages = [];\n\nvar dataItemId = msg.dataId;\nvar itemInstanceId = global.get(\"itemInstanceId\");\nvar assetId = global.get(\"assetId\");\nvar samplingRate;\n\nif(msg.dataId == \"Vibration\"){\n    samplingRate = global.get(\"accelerometerSamplingRate\");\n    partId = global.get(\"accelerometerPartId\");\n    units = global.get(\"accelerometerUnits\");\n}\nelse{\n    samplingRate = global.get(\"currentSamplingRate\");\n    partId = global.get(\"currentPartId\");\n    units = global.get(\"currentUnits\");\n}\n\ntopic = \"Asset/\" + global.get(\"assetId\") + \"/\" + dataItemId;\n\nvar jsonPayload = \"{\\\"assetId\\\":\\\"\" + assetId + \"\\\",\\\"dateTime\\\":\\\"\" + msg.dateTime + \"\\\",\\\"dataItemId\\\":\\\"\" + dataItemId + \"\\\",\\\"samplingInterval\\\":\\\"\" + samplingRate + \"\\\",\\\"sensorId\\\":\\\"\" + partId + \"\\\",\\\"itemInstanceId\\\":\\\"\" + itemInstanceId + \"\\\",\\\"values\\\":\\\"\" + data +  \"\\\"}\";\nvar newMessage = { topic: topic, payload: jsonPayload };\n\nallMessages.push(newMessage);\n\nmsg = [allMessages];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "60d3ff2c.8f97d",
        "type": "switch",
        "z": "eccbbcf4.fe2b5",
        "name": "Parse Sensor Type",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Accelerometer-1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Accelerometer-2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Current",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Temperature-1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Temperature-2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 357,
        "y": 522,
        "wires": [
            [
                "b85ec7e9.310698"
            ],
            [
                "6e75ac9c.0e1b44"
            ],
            [
                "d97d1d53.5f992"
            ],
            [
                "8e479548.db7c78"
            ],
            []
        ]
    },
    {
        "id": "d97d1d53.5f992",
        "type": "join",
        "z": "eccbbcf4.fe2b5",
        "name": "Current - Phase 1",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\nCurrent-1",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 599,
        "y": 536,
        "wires": [
            [
                "7e5a4590.6b9bdc"
            ]
        ]
    },
    {
        "id": "7e5a4590.6b9bdc",
        "type": "change",
        "z": "eccbbcf4.fe2b5",
        "name": "Assign Current Data Tag",
        "rules": [
            {
                "t": "set",
                "p": "dataId",
                "pt": "msg",
                "to": "Current",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Current-1",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "phase",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "partId",
                "pt": "msg",
                "to": "Current-Motor",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 540,
        "wires": [
            [
                "1ba33aef.107e05"
            ]
        ]
    },
    {
        "id": "8e479548.db7c78",
        "type": "join",
        "z": "eccbbcf4.fe2b5",
        "name": "Temperature-1",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\nTemperature-1",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 579,
        "y": 576,
        "wires": [
            [
                "5f200d0b.3e8554"
            ]
        ]
    },
    {
        "id": "5f200d0b.3e8554",
        "type": "change",
        "z": "eccbbcf4.fe2b5",
        "name": "Assign Temperature Data Tag",
        "rules": [
            {
                "t": "set",
                "p": "dataId",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Temperature-1",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "partId",
                "pt": "msg",
                "to": "Temperature-Pump-Outlet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 580,
        "wires": [
            [
                "1ba33aef.107e05"
            ]
        ]
    },
    {
        "id": "b85ec7e9.310698",
        "type": "join",
        "z": "eccbbcf4.fe2b5",
        "name": "Accelerometer-1",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\nAccelerometer-1",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "d4ebdbc9.1a2928"
            ]
        ]
    },
    {
        "id": "d4ebdbc9.1a2928",
        "type": "change",
        "z": "eccbbcf4.fe2b5",
        "name": "Assign Accelerometer Data Tag",
        "rules": [
            {
                "t": "set",
                "p": "dataId",
                "pt": "msg",
                "to": "Vibration",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Accelerometer-1",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "partId",
                "pt": "msg",
                "to": "Accelerometer-Motor",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            [
                "1ba33aef.107e05"
            ]
        ]
    },
    {
        "id": "1ba33aef.107e05",
        "type": "change",
        "z": "eccbbcf4.fe2b5",
        "name": "Replace unwanted characters",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",END",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\\n",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": " ",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "END",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "945dff64.78f54",
        "type": "exec",
        "z": "bb257ac8.0f526",
        "command": "/home/debian/Git/BBB-PRU-ADC/FIS_Meas/rb_file",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Execute PRU Measurements",
        "x": 660,
        "y": 160,
        "wires": [
            [
                "4876b803.705cd8",
                "caaf0b9b.5e5be8"
            ],
            [
                "caaf0b9b.5e5be8"
            ],
            [
                "caaf0b9b.5e5be8"
            ]
        ]
    },
    {
        "id": "6b92c194.575db",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Sampling Parameters",
        "func": "var sampleSize = global.get(\"sampleSizeAcceleration\");\nvar sampleInterval = global.get(\"sampleIntervalAcceleration\");\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "945dff64.78f54",
                "106fcc9b.7f0afb"
            ]
        ]
    },
    {
        "id": "28c18d90.0e4ee2",
        "type": "http request",
        "z": "bb257ac8.0f526",
        "name": "Feature Extraction",
        "method": "POST",
        "ret": "txt",
        "url": "localhost:5000/features/vibration/inference",
        "tls": "",
        "x": 670,
        "y": 260,
        "wires": [
            [
                "2e1ca215.9c0bee",
                "7006d1df.6a2e6"
            ]
        ]
    },
    {
        "id": "ad671599.f7ac28",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Create HTTP Request",
        "func": "var fftPoints = global.get(\"fftPoints\");\n\nmsg.payload = {};\n// msg.payload['values'] = vibration;\nmsg.payload['fftPoints'] = global.get(\"sampleSizeAcceleration\") / 2;\nmsg.payload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\nmsg.payload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\nmsg.payload['samplingInterval'] = global.get(\"sampleIntervalAcceleration\");\nmsg.payload['modelId'] = 'CNN-AE-Lite';\nmsg.payload['returnPSD'] = true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "28c18d90.0e4ee2"
            ]
        ]
    },
    {
        "id": "7006d1df.6a2e6",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "2e1ca215.9c0bee",
        "type": "json",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "7006d1df.6a2e6",
                "ccdf3468.6a7438"
            ]
        ]
    },
    {
        "id": "4016767b.6fb32",
        "type": "mqtt in",
        "z": "400cc936.066418",
        "name": "",
        "topic": "Asset/Chapter4/Vibration/Beaglebone",
        "qos": "0",
        "broker": "d309aa5b.5f20e",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "bbd4675c.29e1c"
            ]
        ]
    },
    {
        "id": "bbd4675c.29e1c",
        "type": "json",
        "z": "400cc936.066418",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 240,
        "wires": [
            [
                "7fb10675.c6bc2"
            ]
        ]
    },
    {
        "id": "bb37cdce.30745",
        "type": "inject",
        "z": "400cc936.066418",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "cea5e629.c313b8"
            ]
        ]
    },
    {
        "id": "cea5e629.c313b8",
        "type": "change",
        "z": "400cc936.066418",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "basePath",
                "pt": "global",
                "to": "/home/debian/Git/Edge-Analytics-IoT-Framework/Dissertation-Notebooks/Chapter-5/Edge-Device-Latency/RMS-Only/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "modelId",
                "pt": "global",
                "to": "CNN-AE-Lite",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "inferenceLocation",
                "pt": "global",
                "to": "Beaglebone",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "samples",
                "pt": "global",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "959e2ca.c26c95",
        "type": "http request",
        "z": "400cc936.066418",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/gmm",
        "tls": "",
        "x": 350,
        "y": 320,
        "wires": [
            [
                "2c9c064.d86597a"
            ]
        ]
    },
    {
        "id": "1002b458.2fb7bc",
        "type": "switch",
        "z": "400cc936.066418",
        "name": "",
        "property": "modelId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PCA-GMM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CNN-AE-Lite",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCA-GNB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CNN-MLP-Lite",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 170,
        "y": 340,
        "wires": [
            [
                "959e2ca.c26c95"
            ],
            [
                "a8d7755c.dc2a2"
            ],
            [
                "dba09791.e1814"
            ],
            [
                "82f5a1a7.32a4d"
            ]
        ]
    },
    {
        "id": "7fb10675.c6bc2",
        "type": "change",
        "z": "400cc936.066418",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "modelId",
                "pt": "msg",
                "to": "payload.modelId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.basePath",
                "pt": "msg",
                "to": "basePath",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "basePath",
                "pt": "msg",
                "to": "payload.basePath",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "dateTime-Sent",
                "pt": "msg",
                "to": "payload.dateTime-Sent",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "assetId",
                "pt": "msg",
                "to": "payload.assetId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 240,
        "wires": [
            [
                "239291c0.c81f8e"
            ]
        ]
    },
    {
        "id": "43cdd737.caf36",
        "type": "debug",
        "z": "400cc936.066418",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "2c9c064.d86597a",
        "type": "function",
        "z": "400cc936.066418",
        "name": "",
        "func": "var now = new Date();\n\nvar payload = {};\nvar statusText = \"\";\nvar topic = \"Asset/\" + msg[\"assetId\"] + \"/Inference/Beaglebone\";\n\n\n// Build payload\npayload[\"dateTime-Sent\"] = msg[\"dateTime-Sent\"];\npayload[\"dateTime-Inference-Start\"] = msg[\"dateTime-Inference-Start\"];\npayload[\"dateTime-Inference-End\"] = now.getTime();\npayload[\"modelId\"] = msg[\"modelId\"];\npayload[\"values\"] = msg.payload[\"values\"];\n\n// Set message payload and topic.\nmsg.topic = topic;\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 320,
        "wires": [
            [
                "43cdd737.caf36",
                "732ab1ee.77a5"
            ]
        ]
    },
    {
        "id": "239291c0.c81f8e",
        "type": "function",
        "z": "400cc936.066418",
        "name": "",
        "func": "var now = new Date();\n\n\n// Build payload\nmsg[\"dateTime-Inference-Start\"] = now.getTime();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 240,
        "wires": [
            [
                "1002b458.2fb7bc"
            ]
        ]
    },
    {
        "id": "732ab1ee.77a5",
        "type": "mqtt out",
        "z": "400cc936.066418",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "broker": "d309aa5b.5f20e",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "a8d7755c.dc2a2",
        "type": "http request",
        "z": "400cc936.066418",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/autoencoder/lite",
        "tls": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "2c9c064.d86597a"
            ]
        ]
    },
    {
        "id": "dba09791.e1814",
        "type": "http request",
        "z": "400cc936.066418",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/gnb",
        "tls": "",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "2c9c064.d86597a"
            ]
        ]
    },
    {
        "id": "82f5a1a7.32a4d",
        "type": "http request",
        "z": "400cc936.066418",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/mlp-classifier/lite",
        "tls": "",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "2c9c064.d86597a"
            ]
        ]
    },
    {
        "id": "b905c1cc.b0f0d8",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Sample Start Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-Start\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "6b92c194.575db"
            ]
        ]
    },
    {
        "id": "4876b803.705cd8",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Sample End Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-End\",now.getTime());\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\n\nif (sampleTime > 2000) {\n    msg.payload = true;\n    return msg;\n}\nelse {\n    msg.payload = '';\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "99476a1b.93177"
            ]
        ]
    },
    {
        "id": "bff62480.23ad38",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Feature Extract Time",
        "func": "var now = new Date();\n\nglobal.set(\"Feature-Extract\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "63c5a4b5.ba4a8c"
            ]
        ]
    },
    {
        "id": "63c5a4b5.ba4a8c",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Create HTTP Request",
        "func": "var fftPoints = global.get(\"fftPoints\");\n\n// msg.payload['values'] = vibration;\nmsg.payload['values'] = msg.payload.fftAmps.slice(0,1024);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "8c923f21.811ea8"
            ]
        ]
    },
    {
        "id": "4d0003c2.fae04c",
        "type": "json",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "7006d1df.6a2e6"
            ]
        ]
    },
    {
        "id": "ccdf3468.6a7438",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Model Inference Time",
        "func": "var now = new Date();\n\nglobal.set(\"Model-Inference\",now.getTime());\n\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Vibration/Beaglebone\";\n\nmsg.topic = topic;\nmsg.payload['dateTime-Sent'] = now.getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "bf1c61fd.5d0b5",
                "5fc03b97.0539a4"
            ]
        ]
    },
    {
        "id": "bf1c61fd.5d0b5",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "",
        "func": "var payload = {};\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\nvar inferenceTime = global.get(\"Model-Inference\") - global.get(\"Sample-End\");\n\n\nif (sampleTime > 2000) {\n    payload = sampleTime + ',' + msg.payload['parseTime'] + ',' + msg.payload['inferenceTime'] + ',' + inferenceTime;\n}\nelse {\n    payload = '';\n}\nmsg.payload = payload;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 90,
        "y": 480,
        "wires": [
            [
                "b664423a.2ee5e",
                "4449725d.390204"
            ]
        ]
    },
    {
        "id": "b664423a.2ee5e",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 250,
        "y": 560,
        "wires": []
    },
    {
        "id": "b841d5f7.d07628",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + global.get(\"InferenceLocation\") + '_' + global.get('modelId') + '_' + global.get(\"sampleSizeAcceleration\").toString() +  '.csv';\n\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e172cbc1.61b148",
        "type": "file",
        "z": "bb257ac8.0f526",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "d5dd4897.906a88"
            ]
        ]
    },
    {
        "id": "9b819f50.3451e",
        "type": "inject",
        "z": "bb257ac8.0f526",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 60,
        "wires": [
            [
                "b905c1cc.b0f0d8"
            ]
        ]
    },
    {
        "id": "d5dd4897.906a88",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Loop",
        "func": "\nif (global.get(\"samples\") > 0) {\n    global.set(\"samples\",global.get(\"samples\") - 1);\n    return msg;\n}\nelse if (global.get(\"sampleSizeAcceleration\") < 60000){\n    global.set(\"sampleIntervalAcceleration\",1/global.get(\"sampleSizeAcceleration\"));\n    global.set(\"sampleSizeAcceleration\",global.get(\"sampleSizeAcceleration\") * 2);\n    global.set(\"samples\",1000);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 540,
        "wires": [
            [
                "b905c1cc.b0f0d8"
            ]
        ]
    },
    {
        "id": "106fcc9b.7f0afb",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "49d75fe4.71dad",
        "type": "inject",
        "z": "bb257ac8.0f526",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 260,
        "y": 640,
        "wires": [
            [
                "f2981c6.121fb6"
            ]
        ]
    },
    {
        "id": "ebb993df.7517e8",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 570,
        "y": 640,
        "wires": []
    },
    {
        "id": "f2981c6.121fb6",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "",
        "func": "\nmsg.payload = global.get(\"samples\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 640,
        "wires": [
            [
                "ebb993df.7517e8"
            ]
        ]
    },
    {
        "id": "caaf0b9b.5e5be8",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "6148884d.cd314",
        "type": "exec",
        "z": "ab33b2af.6a17e",
        "command": "/home/debian/Git/BBB-PRU-ADC/FIS_Meas/rb_file",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Execute PRU Measurements",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "db76d9ae.5e3b3",
                "b1ec2a60.028a2"
            ],
            [
                "b1ec2a60.028a2"
            ],
            [
                "b1ec2a60.028a2"
            ]
        ]
    },
    {
        "id": "6cb1dafd.5b6154",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Set Sampling Parameters",
        "func": "var sampleSize = global.get(\"sampleSizeAcceleration\");\nvar sampleInterval = global.get(\"sampleIntervalAcceleration\");\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "6148884d.cd314",
                "a82b6de4.08aab"
            ]
        ]
    },
    {
        "id": "673bb6f.9a49248",
        "type": "http request",
        "z": "ab33b2af.6a17e",
        "name": "Feature Extraction",
        "method": "POST",
        "ret": "txt",
        "url": "localhost:5000/features/parse/timedomain",
        "tls": "",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "291732ae.dd1716"
            ]
        ]
    },
    {
        "id": "1b963e2e.e3aca2",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Create HTTP Request",
        "func": "var fftPoints = global.get(\"fftPoints\");\n\nmsg.payload = {};\nmsg.payload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\nmsg.payload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "673bb6f.9a49248"
            ]
        ]
    },
    {
        "id": "4c6699cc.e38f1",
        "type": "debug",
        "z": "ab33b2af.6a17e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1110,
        "y": 100,
        "wires": []
    },
    {
        "id": "291732ae.dd1716",
        "type": "json",
        "z": "ab33b2af.6a17e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 240,
        "wires": [
            [
                "4c6699cc.e38f1",
                "f9164c89.74f48"
            ]
        ]
    },
    {
        "id": "c9c537d4.1a1248",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Set Sample Start Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-Start\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "6cb1dafd.5b6154"
            ]
        ]
    },
    {
        "id": "db76d9ae.5e3b3",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Set Sample End Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-End\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "1b963e2e.e3aca2"
            ]
        ]
    },
    {
        "id": "f9164c89.74f48",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Set Feature Extract Time",
        "func": "var now = new Date();\n\nglobal.set(\"Feature-Extract\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 300,
        "wires": [
            [
                "880f2fd1.4b6e68"
            ]
        ]
    },
    {
        "id": "880f2fd1.4b6e68",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Calculate Latency",
        "func": "var payload = {};\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\nvar extractTime = global.get(\"Feature-Extract\") - global.get(\"Sample-End\");\n\nif (sampleTime > 2000) {\n    payload = sampleTime + ',' + extractTime;\n}\nelse {\n    payload = '';\n}\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 90,
        "y": 400,
        "wires": [
            [
                "ec91b80e.dcc738",
                "e346f8ae.0d5f8"
            ]
        ]
    },
    {
        "id": "ec91b80e.dcc738",
        "type": "debug",
        "z": "ab33b2af.6a17e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 290,
        "y": 460,
        "wires": []
    },
    {
        "id": "e473ffcf.bc7288",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Set Filename",
        "func": "var filename = global.get(\"basePath\") + global.get(\"InferenceLocation\") + '_' + (Math.round(global.get(\"sampleSizeAcceleration\"))).toString() +  '.csv';\n\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "b8943df8.c8f688"
            ]
        ]
    },
    {
        "id": "b8943df8.c8f688",
        "type": "file",
        "z": "ab33b2af.6a17e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 570,
        "y": 400,
        "wires": [
            [
                "fab68b45.849358"
            ]
        ]
    },
    {
        "id": "fab68b45.849358",
        "type": "delay",
        "z": "ab33b2af.6a17e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 730,
        "y": 400,
        "wires": [
            [
                "b37af380.2ecaa"
            ]
        ]
    },
    {
        "id": "4d4c3caa.b72b6c",
        "type": "inject",
        "z": "ab33b2af.6a17e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "c9c537d4.1a1248"
            ]
        ]
    },
    {
        "id": "b37af380.2ecaa",
        "type": "function",
        "z": "ab33b2af.6a17e",
        "name": "Loop",
        "func": "\nif (global.get(\"samples\") > 0) {\n    global.set(\"samples\",global.get(\"samples\") - 1);\n    return msg;\n}\nelse if (global.get(\"sampleSizeAcceleration\") < 60000){\n    global.set(\"sampleIntervalAcceleration\",1/global.get(\"sampleSizeAcceleration\"));\n    global.set(\"sampleSizeAcceleration\",global.get(\"sampleSizeAcceleration\") * 2);\n    global.set(\"samples\",1000);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "c9c537d4.1a1248"
            ]
        ]
    },
    {
        "id": "a82b6de4.08aab",
        "type": "debug",
        "z": "ab33b2af.6a17e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "b1ec2a60.028a2",
        "type": "debug",
        "z": "ab33b2af.6a17e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 60,
        "wires": []
    },
    {
        "id": "35d7f856.1879c",
        "type": "exec",
        "z": "7620dcc5.2c3d6c",
        "command": "/home/debian/Git/BBB-PRU-ADC/FIS_Meas/rb_file",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Execute PRU Measurements",
        "x": 720,
        "y": 180,
        "wires": [
            [
                "23aad44c.b0e184",
                "6747949a.a35c7c"
            ],
            [
                "6747949a.a35c7c"
            ],
            [
                "6747949a.a35c7c"
            ]
        ]
    },
    {
        "id": "89d273e6.231ae8",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "Set Sampling Parameters",
        "func": "var sampleSize = global.get(\"sampleSizeAcceleration\");\nvar sampleInterval = global.get(\"sampleIntervalAcceleration\");\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "35d7f856.1879c",
                "154f6dd3.e7c58a"
            ]
        ]
    },
    {
        "id": "78a2581b.97ab4",
        "type": "debug",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "87507d6f.ee8258",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "Set Sample Start Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-Start\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "89d273e6.231ae8"
            ]
        ]
    },
    {
        "id": "23aad44c.b0e184",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "Set Sample End Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-End\",now.getTime());\n\nmsg.payload = {};\n\nmsg.payload['fftPoints'] = global.get(\"sampleSizeAcceleration\") / 2;\nmsg.payload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\nmsg.payload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\nmsg.payload['samplingInterval'] = global.get(\"sampleIntervalAcceleration\");\nmsg.payload['modelId'] = 'CNN-AE-Lite';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "e6248ee5.1767e"
            ]
        ]
    },
    {
        "id": "b325b82c.69eea",
        "type": "inject",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "87507d6f.ee8258"
            ]
        ]
    },
    {
        "id": "154f6dd3.e7c58a",
        "type": "debug",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "6747949a.a35c7c",
        "type": "debug",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 120,
        "wires": []
    },
    {
        "id": "c3661d14.abfc08",
        "type": "http request",
        "z": "7620dcc5.2c3d6c",
        "name": "Feature Extraction",
        "method": "POST",
        "ret": "bin",
        "url": "localhost:5000/features/parse/rawvib",
        "tls": "",
        "x": 630,
        "y": 280,
        "wires": [
            [
                "5a1efcdd.08b424",
                "78a2581b.97ab4"
            ]
        ]
    },
    {
        "id": "9d0272a5.7f2ab8",
        "type": "http request",
        "z": "bb257ac8.0f526",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/gnb",
        "tls": "",
        "x": 790,
        "y": 380,
        "wires": [
            [
                "4d0003c2.fae04c"
            ]
        ]
    },
    {
        "id": "53df4556.61d464",
        "type": "http request",
        "z": "bb257ac8.0f526",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/autoencoder/lite",
        "tls": "",
        "x": 790,
        "y": 340,
        "wires": [
            [
                "4d0003c2.fae04c"
            ]
        ]
    },
    {
        "id": "865aa786.d4de6",
        "type": "http request",
        "z": "bb257ac8.0f526",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/gmm",
        "tls": "",
        "x": 790,
        "y": 300,
        "wires": [
            [
                "4d0003c2.fae04c"
            ]
        ]
    },
    {
        "id": "8c923f21.811ea8",
        "type": "switch",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "modelId",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "PCA-GMM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CNN-AE-Lite",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCA-GNB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CNN-MLP-Lite",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 630,
        "y": 320,
        "wires": [
            [
                "865aa786.d4de6"
            ],
            [
                "53df4556.61d464"
            ],
            [
                "9d0272a5.7f2ab8"
            ],
            [
                "9b7870df.d6c33"
            ]
        ]
    },
    {
        "id": "9b7870df.d6c33",
        "type": "http request",
        "z": "bb257ac8.0f526",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/models/mlp-classifier/lite",
        "tls": "",
        "x": 790,
        "y": 420,
        "wires": [
            [
                "4d0003c2.fae04c"
            ]
        ]
    },
    {
        "id": "b8be9546.15443",
        "type": "change",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "assetId",
                "pt": "global",
                "to": "Chapter5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "basePath",
                "pt": "global",
                "to": "/home/debian/Git/Edge-Analytics-IoT-Framework/Dissertation-Notebooks/Chapter-5/Edge-Device-Latency/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "MQTT",
                "pt": "global",
                "to": "Remote",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "InferenceLocation",
                "pt": "global",
                "to": "Beaglebone",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ModelStatus",
                "pt": "global",
                "to": "Loaded",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "samples",
                "pt": "global",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 360,
        "wires": [
            [
                "e2c8330.cab6f5"
            ]
        ]
    },
    {
        "id": "5f80de65.a379e",
        "type": "inject",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "b8be9546.15443"
            ]
        ]
    },
    {
        "id": "a58042f9.0b7ca8",
        "type": "mqtt out",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "2d554089.32684",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "5a1efcdd.08b424",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "func": "var now = new Date();\n\nvar payload = {};\n\npayload['values'] = msg.payload;\npayload[\"dateTime-Sent\"] = now.getTime();\npayload['modelId'] = 'CNN-AE-Lite';\npayload['fftPoints'] = global.get(\"sampleSizeAcceleration\") / 2;\npayload['samplingInterval'] = global.get(\"sampleIntervalAcceleration\");\npayload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\npayload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\n\nmsg.payload = payload;\n\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Vibration/Amazon-EC2\";\n\nmsg.topic = topic;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 300,
        "wires": [
            [
                "78a2581b.97ab4",
                "a58042f9.0b7ca8"
            ]
        ]
    },
    {
        "id": "4b2dd370.425fbc",
        "type": "mqtt in",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "topic": "Asset/Chapter5/Inference/Amazon-EC2",
        "qos": "0",
        "broker": "2d554089.32684",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "7f8654e9.01ee64"
            ]
        ]
    },
    {
        "id": "b8b1bc65.803f7",
        "type": "file",
        "z": "7620dcc5.2c3d6c",
        "name": "Test",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 930,
        "y": 440,
        "wires": [
            [
                "87db8898.ad972"
            ]
        ]
    },
    {
        "id": "26e02456.83c5ec",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "Set Latency Values",
        "func": "var now = new Date();\nvar payload = {};\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\nvar extractTime = msg.payload[\"dateTime-Sent\"] - global.get(\"Sample-End\");\nvar computeTime = msg.payload[\"computeTime\"];\nvar roundTripTime = now.getTime() - msg.payload[\"dateTime-Sent\"];\n\npayload = sampleTime + ',' + extractTime + ',' + computeTime + ',' +  roundTripTime;\n\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 440,
        "wires": [
            [
                "b8b1bc65.803f7",
                "bce6350a.4ee358"
            ]
        ]
    },
    {
        "id": "bce6350a.4ee358",
        "type": "debug",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 380,
        "wires": []
    },
    {
        "id": "7f8654e9.01ee64",
        "type": "json",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "408b4d1e.fe1bfc"
            ]
        ]
    },
    {
        "id": "408b4d1e.fe1bfc",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + 'Amazon-EC2_computeLatency' + global.get(\"sampleSizeAcceleration\").toString() +  '.csv';\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "26e02456.83c5ec"
            ]
        ]
    },
    {
        "id": "fa9cc59d.d45ba",
        "type": "link out",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "links": [
            "b800942a.968268"
        ],
        "x": 1275,
        "y": 420,
        "wires": []
    },
    {
        "id": "b800942a.968268",
        "type": "link in",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "links": [
            "fa9cc59d.d45ba"
        ],
        "x": 35,
        "y": 180,
        "wires": [
            [
                "87507d6f.ee8258"
            ]
        ]
    },
    {
        "id": "e2c8330.cab6f5",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "Set Global Variables",
        "func": "// Asset configuration variables\nglobal.set(\"assetId\", \"Chapter5\");\nglobal.set(\"fftPoints\",2048);\nglobal.set(\"testReps\",100);\n\nglobal.set(\"Sample-Start\",0);\nglobal.set(\"Sample-End\",0);\nglobal.set(\"Feature-Extract\",0);\nglobal.set(\"Model-Inference\",0);\nglobal.set(\"modelId\",'returnPSD');\n\n// Teensy configuration Variables\nglobal.set(\"repeatIntervalAcceleration\", 12.0);       //How often is acceleration data sent (seconds). See https://arch.fis.gatech.edu/message-vibration/\nglobal.set(\"sampleIntervalAcceleration\", 1/32768);    //How fast is the acceleration data sampled (seconds)\nglobal.set(\"sampleSizeAcceleration\", 32768*2);           //How many acceleration samples are taken each interval. See: https://arch.fis.gatech.edu/message-current/\nglobal.set(\"repeatIntervalCurrent\", 4.0);            //How often is current data sent (seconds)\n// Change Heartbeat rate on Heartbeat tab.\n// Change Change Temperate parameters on Temperature tab.\n\n// Sensor Id mappings between serial data and MQTT messages.\nglobal.set(\"sensorIdA1\", \"acceleration1\");\nglobal.set(\"sensorIdC1\", \"current1\");\nglobal.set(\"sensorIdC2\", \"current2\");\nglobal.set(\"sensorIdC3\", \"current3\");\n\n// Resistor 1: 68 kOhm\nvar r1 = 68;\n\n// Resistor 2: 33 kOhm\nvar r2 = 33;\n\n// Max voltage read by the PRU\nvar maxVoltage = 1.8;\n\n// Max decimal number for a 12 bit reading\nvar maxDecimal = 4096;\n\nvar dividerCoeff = r2 / (r2 + r1);\n\n// Sensitivity: 1000 mV / g\n// max Decimal Value: 4096\n// Max Voltage: 1.8V\n\n// Value in Volts\n// value * 1.8 / 4096\n\n// Value in volts at output\n// value / dividerCoeff\n\n// Volts at output to g\n\n// Acceleratin calibration values\nglobal.set(\"accelerationCoef0\", -2.5 );\nglobal.set(\"accelerationCoef1\", maxVoltage / maxDecimal / dividerCoeff);\n\n// Acceleration timestamp\nglobal.set(\"dateTimeAcceleration\", 0)\n\n// Current calibration values.\nglobal.set(\"current1Coef0\", -0.47350795322031);\nglobal.set(\"current1Coef1\", 0.00569524343138167);\nglobal.set(\"current2Coef0\", -0.47350795322031);\nglobal.set(\"current2Coef1\", 0.00569524343138167);\nglobal.set(\"current3Coef0\", -0.47350795322031);\nglobal.set(\"current3Coef1\", 0.00569524343138167);\n// From tests: Teensy ADC ~ 21900 bits / volt at 16 bit resolution\n\n// Last heartbeat seed\nvar now = new Date();\nglobal.set(\"lastHearbeat\", now.valueOf());\n\nstatusText = \"Variables Set\"\nnode.status({fill:\"green\", shape:\"dot\", text: statusText});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f2b7be92.139ae",
        "type": "exec",
        "z": "759a288b.f02f9",
        "command": "/home/debian/Git/BBB-PRU-ADC/FIS_Meas/rb_file",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Execute PRU Measurements",
        "x": 720,
        "y": 180,
        "wires": [
            [
                "aea2c88e.f7525",
                "526cc1e4.b01ee"
            ],
            [
                "526cc1e4.b01ee"
            ],
            [
                "526cc1e4.b01ee"
            ]
        ]
    },
    {
        "id": "447095f1.0ec764",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Sampling Parameters",
        "func": "var sampleSize = global.get(\"sampleSizeAcceleration\");\nvar sampleInterval = global.get(\"sampleIntervalAcceleration\");\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "f2b7be92.139ae",
                "913414fe.b101f"
            ]
        ]
    },
    {
        "id": "8741da1d.4d8b1",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "3b53eea5.8ece72",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Sample Start Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-Start\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "447095f1.0ec764"
            ]
        ]
    },
    {
        "id": "aea2c88e.f7525",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Sample End Time",
        "func": "var now = new Date();\n\nglobal.set(\"Sample-End\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "3ed89022.2450e"
            ]
        ]
    },
    {
        "id": "c17e8439.b01ae8",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Feature Extract Time",
        "func": "var now = new Date();\n\nglobal.set(\"Feature-Extract\",now.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "49b7693f.b71e4"
            ]
        ]
    },
    {
        "id": "49b7693f.b71e4",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var payload = {};\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\nvar extractTime = global.get(\"Feature-Extract\") - global.get(\"Sample-End\");\n\npayload = sampleTime + ',' + extractTime;\n\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "a1a056c4.9b7ce",
                "c22afe66.8c062"
            ]
        ]
    },
    {
        "id": "a1a056c4.9b7ce",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "c22afe66.8c062",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + global.get(\"inferenceLocation\") + '_' + (Math.round(global.get(\"sampleSizeAcceleration\")/20)).toString() +  '.csv';\n\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "be7d6bef.3f897"
            ]
        ]
    },
    {
        "id": "be7d6bef.3f897",
        "type": "file",
        "z": "759a288b.f02f9",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 510,
        "y": 460,
        "wires": [
            [
                "454530f7.76236"
            ]
        ]
    },
    {
        "id": "454530f7.76236",
        "type": "delay",
        "z": "759a288b.f02f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 460,
        "wires": [
            [
                "bab586f7.eca298"
            ]
        ]
    },
    {
        "id": "7db7814f.d88db8",
        "type": "inject",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "3b53eea5.8ece72"
            ]
        ]
    },
    {
        "id": "bab586f7.eca298",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "\nif (global.get(\"samples\") > 0) {\n    global.set(\"samples\",global.get(\"samples\") - 1);\n    return msg;\n}\nelse if (global.get(\"sampleSizeAcceleration\") < 60000){\n    global.set(\"sampleIntervalAcceleration\",1/global.get(\"sampleSizeAcceleration\"));\n    global.set(\"sampleSizeAcceleration\",global.get(\"sampleSizeAcceleration\") * 2);\n    global.set(\"samples\",1000);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 460,
        "wires": [
            [
                "3b53eea5.8ece72"
            ]
        ]
    },
    {
        "id": "913414fe.b101f",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "526cc1e4.b01ee",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ed89022.2450e",
        "type": "http request",
        "z": "759a288b.f02f9",
        "name": "Feature Extraction",
        "method": "POST",
        "ret": "obj",
        "url": "localhost:5000/features/parse/rawvib",
        "tls": "",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "91598dff.e158"
            ]
        ]
    },
    {
        "id": "79bc64de.33de74",
        "type": "file in",
        "z": "759a288b.f02f9",
        "name": "Test",
        "filename": "/home/debian/Git/Edge-Analytics-IoT-Framework/Dissertation-Notebooks/Chapter-4/data/Latency Tests/Train_Healthy.csv",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 620,
        "wires": [
            [
                "5ce35cea.2f0634"
            ]
        ]
    },
    {
        "id": "299416aa.34817a",
        "type": "inject",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 620,
        "wires": [
            [
                "79bc64de.33de74"
            ]
        ]
    },
    {
        "id": "5ce35cea.2f0634",
        "type": "delay",
        "z": "759a288b.f02f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "4",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 620,
        "wires": [
            [
                "5ce45176.2f374"
            ]
        ]
    },
    {
        "id": "5ce45176.2f374",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var now = new Date();\n// var payload = {};\nvar statusText = \"\";\nvar allMessages = [];\n\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Vibration/Amazon-EC2\";\n\nvar modelIds = ['PCA-GMM','CNN-AE-Lite','PCA-GNB','CNN-MLP-Lite'];\n\nfor (i = 0; i < modelIds.length; i++) {\n    let thisMsg = {};\n    let payload = {};\n    payload[\"values\"] = JSON.parse('[' + msg.payload + ']');\n    payload[\"modelId\"] = modelIds[i];\n    payload[\"assetId\"] = global.get(\"assetId\");\n    \n    thisMsg.payload = payload;\n    thisMsg.topic = topic;\n    allMessages.push(thisMsg);\n}\n\n// // Build payload\n// payload[\"dateTime-Sent\"] = now.getTime();\n// payload[\"values\"] = JSON.parse('[' + msg.payload + ']');\n// payload[\"modelId\"] = global.get(\"modelId\");\n// payload[\"assetId\"] = global.get(\"assetId\");\n\n// Set message payload and topic.\n// msg.topic = topic;\n// msg.payload = payload;\n\nreturn [allMessages];",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 620,
        "wires": [
            [
                "194b5d07.c563d3"
            ]
        ]
    },
    {
        "id": "4a443aae.816684",
        "type": "change",
        "z": "759a288b.f02f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "assetId",
                "pt": "global",
                "to": "Chapter5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "basePath",
                "pt": "global",
                "to": "/home/debian/Git/Edge-Analytics-IoT-Framework/Dissertation-Notebooks/Chapter-5/Edge-Device-Latency/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "MQTT",
                "pt": "global",
                "to": "Remote",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "InferenceLocation",
                "pt": "global",
                "to": "Amazon-EC2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ModelStatus",
                "pt": "global",
                "to": "Loaded",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "samples",
                "pt": "global",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a72c06d6.390a38",
        "type": "inject",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "4a443aae.816684"
            ]
        ]
    },
    {
        "id": "f4780c73.4656a8",
        "type": "mqtt out",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "2e80ff05.89b498",
        "x": 1090,
        "y": 620,
        "wires": []
    },
    {
        "id": "d92a2aea.b3778",
        "type": "mqtt in",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "Asset/Chapter4/Inference/Amazon-EC2",
        "qos": "0",
        "broker": "2e80ff05.89b498",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "59d5af4.494705"
            ]
        ]
    },
    {
        "id": "194b5d07.c563d3",
        "type": "delay",
        "z": "759a288b.f02f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 790,
        "y": 620,
        "wires": [
            [
                "473235ba.033324"
            ]
        ]
    },
    {
        "id": "b7f4113f.d329d8",
        "type": "file",
        "z": "759a288b.f02f9",
        "name": "Test",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 910,
        "y": 680,
        "wires": [
            [
                "f2b7efa0.572c58"
            ]
        ]
    },
    {
        "id": "ac9f73d.2b96e1",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Latency Values",
        "func": "var now = new Date();\nvar payload = {};\n\nvar roundTripTime = now.getTime() - msg.payload[\"dateTime-Sent\"];\n\npayload = roundTripTime;\n\n\nmsg.payload = payload;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 680,
        "wires": [
            [
                "b7f4113f.d329d8"
            ]
        ]
    },
    {
        "id": "f2b7efa0.572c58",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "473235ba.033324",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var now = new Date();\n\nmsg.payload[\"dateTime-Sent\"] = now.getTime();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 620,
        "wires": [
            [
                "f4780c73.4656a8",
                "a935b24a.e00dd"
            ]
        ]
    },
    {
        "id": "59d5af4.494705",
        "type": "json",
        "z": "759a288b.f02f9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "f865f352.e50728"
            ]
        ]
    },
    {
        "id": "f865f352.e50728",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + global.get(\"MQTT\") + '_' + global.get(\"InferenceLocation\") + '_' + msg.payload['modelId'] + '_' + global.get(\"ModelStatus\") + '.csv';\n\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 680,
        "wires": [
            [
                "ac9f73d.2b96e1"
            ]
        ]
    },
    {
        "id": "a935b24a.e00dd",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 560,
        "wires": []
    },
    {
        "id": "562d088e.4204a",
        "type": "mqtt out",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "2e80ff05.89b498",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "91598dff.e158",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var now = new Date();\n\nvar payload = {};\n\npayload['values'] = msg.payload.values;\npayload[\"dateTime-Sent\"] = now.getTime();\npayload['modelId'] = 'CNN-AE-Lite';\npayload['fftPoints'] = global.get(\"sampleSizeAcceleration\") / 2;\npayload['samplingInterval'] = global.get(\"sampleIntervalAcceleration\");\npayload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\npayload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\n\nmsg.payload = payload;\n\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Vibration/Amazon-EC2\";\n\nmsg.topic = topic;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "562d088e.4204a",
                "8741da1d.4d8b1"
            ]
        ]
    },
    {
        "id": "f75d0185.1a3768",
        "type": "mqtt in",
        "z": "759a288b.f02f9",
        "name": "",
        "topic": "Asset/Chapter5/Inference/Amazon-EC2",
        "qos": "0",
        "broker": "2e80ff05.89b498",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "fe6435c.30b15c8"
            ]
        ]
    },
    {
        "id": "65259a60.4778c4",
        "type": "file",
        "z": "759a288b.f02f9",
        "name": "Test",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 910,
        "y": 740,
        "wires": [
            [
                "a4d237f2.c709d8",
                "91bf644a.d1e088"
            ]
        ]
    },
    {
        "id": "b9f2adae.49c2b",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "Set Latency Values",
        "func": "var now = new Date();\nvar payload = {};\n\nvar roundTripTime = now.getTime() - msg.payload[\"dateTime-Sent\"];\n\npayload = roundTripTime;\n\n\nmsg.payload = payload;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 740,
        "wires": [
            [
                "65259a60.4778c4"
            ]
        ]
    },
    {
        "id": "a4d237f2.c709d8",
        "type": "debug",
        "z": "759a288b.f02f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 780,
        "wires": []
    },
    {
        "id": "fe6435c.30b15c8",
        "type": "json",
        "z": "759a288b.f02f9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 740,
        "wires": [
            [
                "7036b2cf.6eed3c"
            ]
        ]
    },
    {
        "id": "7036b2cf.6eed3c",
        "type": "function",
        "z": "759a288b.f02f9",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + 'Amazon-EC2_CNN-AE-Lite_' + global.get(\"sampleSizeAcceleration\").toString() +  '.csv';\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 740,
        "wires": [
            [
                "b9f2adae.49c2b"
            ]
        ]
    },
    {
        "id": "91bf644a.d1e088",
        "type": "link out",
        "z": "759a288b.f02f9",
        "name": "",
        "links": [
            "77e63d33.05e834"
        ],
        "x": 1035,
        "y": 740,
        "wires": []
    },
    {
        "id": "77e63d33.05e834",
        "type": "link in",
        "z": "759a288b.f02f9",
        "name": "",
        "links": [
            "91bf644a.d1e088"
        ],
        "x": 35,
        "y": 180,
        "wires": [
            [
                "3b53eea5.8ece72"
            ]
        ]
    },
    {
        "id": "87db8898.ad972",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "func": "\nif (global.get(\"samples\") > 0) {\n    global.set(\"samples\",global.get(\"samples\") - 1);\n    return msg;\n}\nelse if (global.get(\"sampleSizeAcceleration\") < 60000){\n    global.set(\"sampleIntervalAcceleration\",1/global.get(\"sampleSizeAcceleration\"));\n    global.set(\"sampleSizeAcceleration\",global.get(\"sampleSizeAcceleration\") * 2);\n    global.set(\"samples\",1000);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "fa9cc59d.d45ba"
            ]
        ]
    },
    {
        "id": "65931e97.1ea48",
        "type": "inject",
        "z": "85c76f72.05f7a",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "95771af1.af2818"
            ]
        ]
    },
    {
        "id": "71bf4431.328e84",
        "type": "debug",
        "z": "85c76f72.05f7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 530,
        "y": 220,
        "wires": []
    },
    {
        "id": "95771af1.af2818",
        "type": "function",
        "z": "85c76f72.05f7a",
        "name": "",
        "func": "setTimeout(function(){\n    node.status({fill:\"red\", shape:\"ring\", text:\" \"});\n    msg['payload'] = 'finished';\n    node.send(msg);\n}, 2000);\nnode.status({fill:\"blue\", shape:\"ring\", text:' '});\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "71bf4431.328e84",
                "eb519e8d.2e3218"
            ]
        ]
    },
    {
        "id": "22eba2db.14eb46",
        "type": "function",
        "z": "85c76f72.05f7a",
        "name": "Set Sampling Parameters",
        "func": "var sampleSize = global.get(\"sampleSizeAcceleration\");\nvar sampleInterval = global.get(\"sampleIntervalAcceleration\");\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "604697d1.d364c8"
            ]
        ]
    },
    {
        "id": "604697d1.d364c8",
        "type": "exec",
        "z": "85c76f72.05f7a",
        "command": "/home/debian/Git/BBB-PRU-ADC/FIS_Meas/rb_file",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Execute PRU Measurements",
        "x": 660,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5b09bb7f.b86064",
        "type": "http request",
        "z": "85c76f72.05f7a",
        "name": "Feature Extraction",
        "method": "POST",
        "ret": "txt",
        "url": "localhost:5000/features/vibration/inference",
        "tls": "",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "39934540.bf3aba"
            ]
        ]
    },
    {
        "id": "39934540.bf3aba",
        "type": "json",
        "z": "85c76f72.05f7a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 420,
        "wires": [
            [
                "72b12f05.a66378"
            ]
        ]
    },
    {
        "id": "2094ed1a.f74982",
        "type": "delay",
        "z": "85c76f72.05f7a",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 360,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "eb519e8d.2e3218",
        "type": "change",
        "z": "85c76f72.05f7a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "samples",
                "pt": "flow",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "22eba2db.14eb46"
            ]
        ]
    },
    {
        "id": "76fda7df.03c46",
        "type": "function",
        "z": "85c76f72.05f7a",
        "name": "",
        "func": "\nif (flow.get(\"samples\") > 0) {\n    flow.set(\"samples\",flow.get(\"samples\") - 1);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "22eba2db.14eb46"
            ]
        ]
    },
    {
        "id": "72b12f05.a66378",
        "type": "debug",
        "z": "85c76f72.05f7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1120,
        "y": 360,
        "wires": []
    },
    {
        "id": "e346f8ae.0d5f8",
        "type": "switch",
        "z": "ab33b2af.6a17e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "b37af380.2ecaa"
            ],
            [
                "e473ffcf.bc7288"
            ]
        ]
    },
    {
        "id": "4449725d.390204",
        "type": "switch",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 480,
        "wires": [
            [
                "b905c1cc.b0f0d8"
            ],
            [
                "b841d5f7.d07628"
            ]
        ]
    },
    {
        "id": "e6248ee5.1767e",
        "type": "function",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "func": "var sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\n\nif (sampleTime > 2000) {\n    return msg;\n}\nelse {\n    msg.payload = '';\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "c5e7b39b.6158"
            ]
        ]
    },
    {
        "id": "c5e7b39b.6158",
        "type": "switch",
        "z": "7620dcc5.2c3d6c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "87507d6f.ee8258"
            ],
            [
                "c3661d14.abfc08"
            ]
        ]
    },
    {
        "id": "5fc03b97.0539a4",
        "type": "mqtt out",
        "z": "bb257ac8.0f526",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "2d554089.32684",
        "x": 1290,
        "y": 260,
        "wires": []
    },
    {
        "id": "7b064e2.7a0d63",
        "type": "mqtt in",
        "z": "bb257ac8.0f526",
        "name": "",
        "topic": "Asset/Chapter5/Vibration/Beaglebone",
        "qos": "0",
        "broker": "2d554089.32684",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "6329ac9f.df1934"
            ]
        ]
    },
    {
        "id": "6329ac9f.df1934",
        "type": "json",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 720,
        "wires": [
            [
                "dfdc0cca.402f2",
                "440e03d5.7070e4"
            ]
        ]
    },
    {
        "id": "dfdc0cca.402f2",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "",
        "func": "var filename = global.get(\"basePath\") + 'Beaglebone_computeLatency_' + global.get(\"sampleSizeAcceleration\").toString() +  '.csv';\nmsg.filename = filename;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "eb1593cb.287d7",
        "type": "function",
        "z": "bb257ac8.0f526",
        "name": "Set Latency Values",
        "func": "var now = new Date();\nvar payload = {};\n\nvar sampleTime = global.get(\"Sample-End\") - global.get(\"Sample-Start\");\nvar extractTime = msg.payload[\"dateTime-Sent\"] - global.get(\"Sample-End\");\nvar roundTripTime = now.getTime() - msg.payload[\"dateTime-Sent\"];\n\npayload = sampleTime + ',' + extractTime + ',' +  roundTripTime;\n\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 720,
        "wires": [
            [
                "2d8426ff.f009c2",
                "6dd28b94.66ca24"
            ]
        ]
    },
    {
        "id": "6dd28b94.66ca24",
        "type": "file",
        "z": "bb257ac8.0f526",
        "name": "Test",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 910,
        "y": 720,
        "wires": [
            [
                "d5dd4897.906a88"
            ]
        ]
    },
    {
        "id": "440e03d5.7070e4",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 630,
        "y": 780,
        "wires": []
    },
    {
        "id": "2d8426ff.f009c2",
        "type": "debug",
        "z": "bb257ac8.0f526",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "99476a1b.93177",
        "type": "switch",
        "z": "bb257ac8.0f526",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "b905c1cc.b0f0d8"
            ],
            [
                "ad671599.f7ac28"
            ]
        ]
    },
    {
        "id": "995534c2.e8bae8",
        "type": "function",
        "z": "85c76f72.05f7a",
        "name": "Set Sample End Time",
        "func": "var now = new Date();\n\nvar sampleTime = now.getTime() - global.get(\"Sample-Start\");\n\nif (sampleTime > 2000) {\n    msg.payload = true;\n    return msg;\n}\nelse {\n    msg.payload = '';\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "7d661ae8.2e432c"
            ]
        ]
    },
    {
        "id": "7d661ae8.2e432c",
        "type": "switch",
        "z": "85c76f72.05f7a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 380,
        "wires": [
            [],
            [
                "8275c440.e6453"
            ]
        ]
    },
    {
        "id": "8275c440.e6453",
        "type": "function",
        "z": "85c76f72.05f7a",
        "name": "Create HTTP Request",
        "func": "var fftPoints = global.get(\"fftPoints\");\n\nmsg.payload = {};\n// msg.payload['values'] = vibration;\nmsg.payload['fftPoints'] = global.get(\"sampleSizeAcceleration\") / 2;\nmsg.payload['accelerationCoeff0'] = global.get(\"accelerationCoef0\");\nmsg.payload['accelerationCoeff1'] = global.get(\"accelerationCoef1\");\nmsg.payload['samplingInterval'] = global.get(\"sampleIntervalAcceleration\");\nmsg.payload['modelId'] = 'CNN-AE-Lite';\nmsg.payload['returnPSD'] = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6f08dbee.7aa75c",
        "type": "inject",
        "z": "7091716.3bddc1",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "d3dc235e.810a7"
            ]
        ]
    },
    {
        "id": "d3dc235e.810a7",
        "type": "function",
        "z": "7091716.3bddc1",
        "name": "",
        "func": "var dateTime = new Date();\nvar now = dateTime.toISOString();\nmsg.payload = now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 220,
        "wires": [
            [
                "d15d81a1.6b4d18"
            ]
        ]
    },
    {
        "id": "d15d81a1.6b4d18",
        "type": "debug",
        "z": "7091716.3bddc1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 520,
        "y": 220,
        "wires": []
    }
]
